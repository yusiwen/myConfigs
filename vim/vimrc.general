" Neo/Vim General Settings
" ----------------------------------------------------------------------------------

let s:is_windows = has('win16') || has('win32') || has('win64')
let s:is_cygwin = has('win32unix')
let s:is_mac = !s:is_windows && !s:is_cygwin
      \ && (has('mac') || has('macunix') || has('gui_macvim') ||
      \   (!executable('xdg-open') &&
      \     system('uname') =~? '^darwin'))
let s:is_linux = !s:is_windows && !s:is_cygwin && !s:is_mac
      \ && (has('unix') && system('uname') =~? '^linux')

" General settings {{{
filetype plugin indent on
syntax on

set title
set mouse=a
if !has('nvim')
  set ttymouse=sgr
endif

set magic             " For regular expressions turn magic on
set path=.,**         " Directories to search when using gf
set virtualedit=block " Position cursor anywhere in visual block
set synmaxcol=1000    " Don't syntax highlight long lines

set nrformats+=alpha  " in-/decrease letters with C-a/C-x

set modeline          " enable modelines
set modelines=5

set selection=inclusive

set ruler             " enable something
set cursorline        " enable hiliting of cursor line

set backspace=indent,eol,start  " Intuitive backspacing ins insert mode"

set background=dark   " i prefer dark backgrounds

set hidden            " buffer switching should be quick
set confirm           " ask instead of just print errors

set equalalways       " make splits equal size
" Always splits to the right and below
set splitright splitbelow
set switchbuf=useopen,usetab " Jump to the first open window in any tab
set switchbuf+=vsplit        " Switch buffer behavior to vsplit

set lazyredraw        " don't redraw while executing macros

set encoding=utf-8    " Necessary to show Unicode glyphs
scriptencoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
set fileformats=unix,dos,mac " Use Unix as the standard file type"

set timeout ttimeout
set timeoutlen=750  " Time out on mappings
set updatetime=1000 " Idle time to write swap and trigger CursorHold

" Time out on key codes
if has('nvim')
  " https://github.com/neovim/neovim/issues/2017
  set ttimeoutlen=-1
else
  set ttimeoutlen=10
endif

set fillchars=vert:‚îÇ,fold:‚îÄ

set diffopt=filler,iwhite " Diff mode: show fillers, ignore white
if exists('+inccommand')
  set inccommand=nosplit
endif

if executable('rg')
  set grepformat=%f:%l:%m
  let &grepprg = 'rg --vimgrep' . (&smartcase ? ' --smart-case' : '')
elseif executable('ag')
  set grepformat=%f:%l:%m
  let &grepprg = 'ag --vimgrep' . (&smartcase ? ' --smart-case' : '')
endif

" What to save for views:
set viewoptions-=options
set viewoptions+=slash,unix

" Mac OSX specific settings {{{
if s:is_mac
  " set italic codes under Mac
  set t_ZH=[3m t_ZR=[23m
  " using OSX system clipboard
  set clipboard=unnamed
endif
" }}}
" }}}
" Sessions {{{
" What to save in sessions:
set sessionoptions-=blank
set sessionoptions-=options
set sessionoptions-=globals
set sessionoptions-=folds
set sessionoptions-=help
set sessionoptions-=buffers
set sessionoptions+=tabpages
" }}}
" GUI or no GUI, that's the question {{{
if !has('nvim')
  if has('gui_running')
    set guicursor+=a:blinkon0       " Cursor doesn't blink - it's annoying
    set guioptions-=m               " No Menubar
    set guioptions-=T               " No Toolbar
    set guioptions-=l               " No Scrollbar left
    set guioptions-=L               " No Scrollbar left when split
    set guioptions-=r               " No Scrollbar right
    set guioptions-=r               " No Scrollbar right when split

    set guifont=Input\ Mono\ Compressed\ Regular\ 10

    set lines=50                    " Height
    set columns=130                 " Width
  else
    set t_Co=256
  endif
endif
" }}}
" Tabstops & Indents {{{
set textwidth=80    " Text width maximum chars before wrapping
set expandtab     " Don't expand tabs to spaces.
set tabstop=2       " The number of spaces a tab is
set softtabstop=2   " While performing editing operations
set shiftwidth=2    " Number of spaces to use in auto(indent)
set smarttab        " Tab insert blanks according to 'shiftwidth'
set autoindent      " Use same indenting on new lines
set smartindent     " Smart autoindenting on new lines
set shiftround      " Round indent to multiple of 'shiftwidth'
" }}}
" Invisibles {{{
" tab: U+25BA, extends: U+00BB, precedes:U+00AB, trail:U+2017, eol:U+00AC
set listchars=tab:‚ñ∫\ ,extends:¬ª,precedes:¬´,trail:‚ê£,eol:¬¨
set list
nmap <silent> <F11> :set list!<CR>
" }}}
" Pairings {{{
set showmatch
set matchpairs+=<:> " Add HTML brackets to pair matching
set matchtime=1     " Tenths of a second to show the matching paren
set cpoptions-=m    " showmatch will wait 0.5s or until a char is typed"
" }}}
" UI Appearance {{{
set noshowmode          " Don't show mode in cmd window
set shortmess=aoOTI     " Shorten messages and don't show intro
set scrolloff=2         " Keep at least 2 lines above/below
set sidescrolloff=5     " Keep at least 5 lines left/right
set number              " Show line numbers

set showtabline=2       " Always show the tabs line
set winwidth=30         " Minimum width for active window
set winheight=1         " Minimum height for active window
set pumheight=15        " Pop-up menu's line height
set helpheight=12       " Minimum help window height

set noshowcmd           " Don't show command in status line
set cmdheight=1         " Height of the command line
set cmdwinheight=5      " Command-line lines
set noequalalways       " Don't resize windows on split or close
set laststatus=2        " Always show a status line
set display+=lastline

" Do not display completion messages
" Patch: https://groups.google.com/forum/#!topic/vim_dev/WeBBjkXE8H8
if has('patch-7.4.314')
  set shortmess+=c
endif

" Do not display message when editing files
if has('patch-7.4.1570')
  set shortmess+=F
endif

" For snippet_complete marker
if has('conceal') && v:version >= 703
  set conceallevel=2 concealcursor=niv
endif
" }}}
" Search {{{
set noignorecase
set smartcase       " Keep case when searching with *
set infercase       " Adjust case in insert completion mode
set incsearch       " Incremental search
set hlsearch        " Highlight search results
set wrapscan        " Searches wrap around the end of the file"
" }}}
" Backup and Recovery {{{
set undofile swapfile nobackup
set directory=$VARPATH/swap//,$VARPATH,~/tmp,/var/tmp,/tmp
set undodir=$VARPATH/undo//,$VARPATH,~/tmp,/var/tmp,/tmp
set backupdir=$VARPATH/backup/,$VARPATH,~/tmp,/var/tmp,/tmp
set viewdir=$VARPATH/view/

" History saving
set history=2000
if has('nvim')
  "  ShaDa/viminfo:
  "   ' - Maximum number of previously edited files marks
  "   < - Maximum number of lines saved for each register
  "   @ - Maximum number of items in the input-line history to be
  "   s - Maximum size of an item contents in KiB
  "   h - Disable the effect of 'hlsearch' when loading the shada
  set shada='300,<10,@50,s100,h
else
  set viminfo='300,<10,@50,h,n$VARPATH/viminfo
endif
" }}}
" Completion {{{
if has('wildmenu')
  set nowildmenu
  set wildmode=list:longest,full
  set wildoptions=tagfile
  set wildignorecase
  set wildignore+=.git,.hg,.svn,.stversions,*.pyc,*.spl,*.o,*.out,*~,%*
  set wildignore+=*.jpg,*.jpeg,*.png,*.gif,*.zip,**/tmp/**,*.DS_Store
  set wildignore+=**/node_modules/**,**/bower_modules/**,*/.sass-cache/*
  set wildignore+=__pycache__,*.egg-info
endif

set showfulltag           " Show tag and tidy search in completion
set complete=.            " No wins, buffs, tags, include scanning
set completeopt=menuone   " Show menu even for one item
set completeopt+=noselect " Do not select a match in the menu
if has('patch-7.4.775')
  set completeopt+=noinsert
endif
set previewheight=12      " Completion preview height

set ofu=syntaxcomplete#Complete
" }}}
" Wrapping {{{
set wrap                        " wrap by default
set linebreak                   " Break long lines at 'breakat'
set breakat=\ \ ;:,!?           " Long lines break chars
set showbreak=‚àü\
set whichwrap+=h,l,<,>,[,],~    " Move to following line on certain keys

set formatoptions+=1 " Don't break lines after a one-letter word
set formatoptions-=t " Don't auto-wrap text
if has('patch-7.3.541')
  set formatoptions+=j " Remove comment leader when joining lines
endif
" }}}
" Macros {{{
" }}}

" vim: set foldmethod=marker ts=2 sw=2 tw=80 expandtab :
