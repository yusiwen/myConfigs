" Mapping for vim & plugins
" ===========================================================

" General Keybindings & Mappings {{{
set pastetoggle=<F10>

" Allow saving of files as sudo when I forgot to start vim using sudo.
"command W w !sudo tee % > /dev/null
" }}}

" unite.vim key mappings {{{
if dein#tap('unite.vim')
  " Map space to the prefix for Unite
  nnoremap [unite] <Nop>
  nmap <space> [unite]

  " General fuzzy search
  "nnoremap <silent> [unite]<space> :<C-u>Unite
  "      \ -no-split -buffer-name=files buffer file_mru bookmark file_rec/async<CR>

  " Quick registers
  nnoremap <silent> [unite]r :<C-u>Unite -quick-match -buffer-name=register register<CR>

  " Quick buffer and mru
  nnoremap <silent> [unite]u :<C-u>Unite -quick-match -buffer-name=buffers buffer<CR>

  " Quick yank history
  nnoremap <silent> [unite]y :<C-u>Unite -quick-match -auto-preview -buffer-name=yanks history/yank<CR>

  " Quick outline (Need 'Shougo/unite-outline' installed)
  nnoremap <silent> [unite]o :<C-u>Unite -buffer-name=outline -vertical outline<CR>

  " Quick sessions (projects)
  nnoremap <silent> [unite]p :<C-u>Unite -buffer-name=sessions session<CR>

  " Quick sources
  nnoremap <silent> [unite]a :<C-u>Unite -buffer-name=sources source<CR>

  " Quick snippet
  nnoremap <silent> [unite]s :<C-u>Unite -buffer-name=snippets ultisnips<CR>

  " Quickly switch lcd
  nnoremap <silent> [unite]d
        \ :<C-u>Unite -buffer-name=change-cwd -default-action=cd directory_mru directory_rec/async<CR>

  " Quick file search
  nnoremap <silent> [unite]f :<C-u>Unite -no-split -buffer-name=files file_rec/async file/new<CR>

  " Quick grep from cwd
  nnoremap <silent> [unite]g :<C-u>Unite -no-split -buffer-name=grep grep:.<CR>

  " Quick help
  nnoremap <silent> [unite]h :<C-u>Unite -buffer-name=help help<CR>

  " Quick line using the word under cursor
  " nnoremap <silent> [unite]l :<C-u>UniteWithCursorWord -buffer-name=search_file line<CR>

  " Quick line
  nnoremap <silent> [unite]l :<C-u>Unite -buffer-name=search_file line<CR>

  " Quick MRU search
  nnoremap <silent> [unite]m :<C-u>Unite -buffer-name=mru file_mru<CR>

  " Quick find
  nnoremap <silent> [unite]n :<C-u>Unite -buffer-name=find find:.<CR>

  " Quick commands
  nnoremap <silent> [unite]c :<C-u>Unite -buffer-name=commands command<CR>

  " Quick bookmarks
  nnoremap <silent> [unite]b :<C-u>Unite -buffer-name=bookmarks bookmark<CR>

  " Quick jump
  nnoremap <silent> [unite]j :<C-u>Unite -buffer-name=jumps jump<CR>

  " Fuzzy search from current buffer
  " nnoremap <silent> [unite]b :<C-u>UniteWithBufferDir
  " \ -buffer-name=files -prompt=%\  buffer file_mru bookmark file<CR>

  " Quick commands
  nnoremap <silent> [unite]; :<C-u>Unite -buffer-name=history -default-action=edit history/command command<CR>

  " Quick tags (Need tsukkee/unite-tag installed)
  nnoremap <silent> [unite]t :<C-u>Unite -buffer-name=tags tag<CR>
endif
" }}}

" neosnippet.vim key mappings {{{
if dein#tap('neosnippet.vim')
  " Plugin key-mappings.
  imap <expr><C-k> (pumvisible()? "\<C-y>" : '') . "\<Plug>(neosnippet_expand_or_jump)"
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)

  " SuperTab like snippets behavior.
  imap <expr><TAB>
        \ pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable_or_jumpable() ? "
        \<Plug>(neosnippet_expand_or_jump)"
        \: "\<TAB>"
endif
" }}}

" vimfiler.vim key mappings {{{
if dein#tap('vimfiler.vim')
  " [unite] is difined at settings above
  nnoremap <silent> [unite]q :<C-u>VimFilerExplorer -buffer-name=explorer -split -simple -winwidth=40 -toggle -no-quit<CR>
  nnoremap <silent> [unite]w :<C-u>VimFiler -buffer-name=files -no-split<CR>
endif
" }}}

if dein#tap('vim-commentary')
  xmap <Leader>v  <Plug>Commentary
  nmap <Leader>v  <Plug>CommentaryLine
  xmap gc  <Plug>Commentary
  nmap gc  <Plug>Commentary
  omap gc  <Plug>Commentary
  nmap gcc <Plug>CommentaryLine
  nmap cgc <Plug>ChangeCommentary
  nmap gcu <Plug>Commentary<Plug>Commentary
endif

if dein#tap('vim-choosewin')
  nmap -         <Plug>(choosewin)
  nmap <Leader>- :<C-u>ChooseWinSwapStay<CR>
endif

if dein#tap('undotree')
  nnoremap <Leader>gu :UndotreeToggle<CR>
endif

" EasyMotion key mappings {{{
if dein#tap('vim-easymotion')
  nmap ss <Plug>(easymotion-s2)
  nmap sd <Plug>(easymotion-s)
  nmap sf <Plug>(easymotion-overwin-f)
  map  sh <Plug>(easymotion-linebackward)
  map  sl <Plug>(easymotion-lineforward)
  " map  sj <Plug>(easymotion-j)
  " map  sk <Plug>(easymotion-k)
  map  s/ <Plug>(easymotion-sn)
  omap s/ <Plug>(easymotion-tn)
  map  sn <Plug>(easymotion-next)
  map  sp <Plug>(easymotion-prev)
endif
" }}}

" TagBar key mappings {{{
if dein#tap('tagbar')
  nnoremap <silent> <Leader>2 <Esc>:TagbarToggle<CR>
endif
" }}}

" vim-operator-surround key mappings {{{
if dein#tap('vim-operator-surround')
  map <silent>sa <Plug>(operator-surround-append)
  map <silent>sd <Plug>(operator-surround-delete)
  map <silent>sr <Plug>(operator-surround-replace)
  nmap <silent>saa <Plug>(operator-surround-append)<Plug>(textobj-multiblock-i)
  nmap <silent>sdd <Plug>(operator-surround-delete)<Plug>(textobj-multiblock-a)
  nmap <silent>srr <Plug>(operator-surround-replace)<Plug>(textobj-multiblock-a)
endif
" }}}

if dein#tap('vim-operator-replace')
  xmap p <Plug>(operator-replace)
endif

if dein#tap('vim-operator-flashy')
  map y <Plug>(operator-flashy)
  nmap Y <Plug>(operator-flashy)$
endif

if dein#tap('vim-asterisk')
  map *   <Plug>(asterisk-g*)
  map g*  <Plug>(asterisk-*)
  map #   <Plug>(asterisk-g#)
  map g#  <Plug>(asterisk-#)

  map z*  <Plug>(asterisk-z*)
  map gz* <Plug>(asterisk-gz*)
  map z#  <Plug>(asterisk-z#)
  map gz# <Plug>(asterisk-gz#)
endif

if dein#tap('accelerated-jk')
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
endif

if dein#tap('vim-indent-guides')
  nmap <silent><Leader>ti :<C-u>IndentGuidesToggle<CR>
endif

if dein#tap('vim-bookmarks')
  nmap ma :<C-u>cgetexpr bm#location_list()<CR>
        \ :<C-u>Denite quickfix -buffer-name=list<CR>
  nmap mn <Plug>BookmarkNext
  nmap mp <Plug>BookmarkPrev
  nmap mm <Plug>BookmarkToggle
  nmap mi <Plug>BookmarkAnnotate
endif

if dein#tap('vim-gitgutter')
  nmap <Leader>hj <Plug>GitGutterNextHunk
  nmap <Leader>hk <Plug>GitGutterPrevHunk
  nmap <Leader>hs <Plug>GitGutterStageHunk
  nmap <Leader>hr <Plug>GitGutterUndoHunk
  nmap <Leader>hp <Plug>GitGutterPreviewHunk
endif

if dein#tap('goyo.vim')
  nnoremap <Leader>G :Goyo<CR>
endif

if dein#tap('vim-expand-region')
  xmap v <Plug>(expand_region_expand)
  xmap V <Plug>(expand_region_shrink)
endif

if dein#tap('sideways.vim')
  nnoremap <silent> m" :SidewaysJumpLeft<CR>
  nnoremap <silent> m' :SidewaysJumpRight<CR>
  omap <silent> a, <Plug>SidewaysArgumentTextobjA
  xmap <silent> a, <Plug>SidewaysArgumentTextobjA
  omap <silent> i, <Plug>SidewaysArgumentTextobjI
  xmap <silent> i, <Plug>SidewaysArgumentTextobjI
endif

if dein#tap('splitjoin.vim')
  let g:splitjoin_join_mapping = ''
  let g:splitjoin_split_mapping = ''
  nmap sj :SplitjoinJoin<CR>
  nmap sk :SplitjoinSplit<CR>
endif

if dein#tap('linediff.vim')
  vnoremap ,df :Linediff<CR>
  vnoremap ,da :LinediffAdd<CR>
  nnoremap ,ds :<C-u>LinediffShow<CR>
  nnoremap ,dr :<C-u>LinediffReset<CR>
endif

if dein#tap('dsf.vim')
  nmap dsf <Plug>DsfDelete
  nmap csf <Plug>DsfChange
endif

if dein#tap('vim-textobj-multiblock')
  omap <silent> ab <Plug>(textobj-multiblock-a)
  omap <silent> ib <Plug>(textobj-multiblock-i)
  xmap <silent> ab <Plug>(textobj-multiblock-a)
  xmap <silent> ib <Plug>(textobj-multiblock-i)
endif

if dein#tap('vim-textobj-function')
  omap <silent> af <Plug>(textobj-function-a)
  omap <silent> if <Plug>(textobj-function-i)
  xmap <silent> af <Plug>(textobj-function-a)
  xmap <silent> if <Plug>(textobj-function-i)
endif

" vim: set foldmethod=marker ts=2 sw=2 tw=80 expandtab :
