"
" ██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
" ██║   ██║██║████╗ ████║██╔══██╗██╔════╝
" ██║   ██║██║██╔████╔██║██████╔╝██║
" ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║
"  ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"   ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
"
"  @author: yusiwen@gmail.com
"  ~/.vim/vimrc is a symbolic link to ~/myConfigs/vim/vimrc

set nocompatible               " Be iMproved

" Set Environment Variables {{{
" Set main configuration directory, and where cache is stored.
let $VIMPATH = fnamemodify(expand('<sfile>'), ':h')
" When using VIMINIT trick for exotic MYVIMRC locations, add path now.
if &runtimepath !~# $VIMPATH
  set runtimepath^=$VIMPATH
endif
let $VARPATH = g:etc#cache_path

" Set augroup
augroup MyAutoCmd
  autocmd!
  autocmd CursorHold *? syntax sync minlines=300
augroup END

" Initialize base requirements
if has('vim_starting')
  if has('nvim')
    " Neovim settings
    execute 'source ' . expand('$VIMPATH/vimrc.neovim')
  endif
endif
" }}}
" Load less plugins while SSHing to remote machines {{{
" if len($SSH_CLIENT)
"   let $VIM_MINIMAL = 1
" endif
" }}}
" Disable default plugins {{{
let g:loaded_getscript = 1
let g:loaded_getscriptPlugin = 1
let g:loaded_gzip = 1
let g:loaded_logiPat = 1
let g:loaded_matchit = 1
let g:loaded_matchparen = 1
let g:loaded_netrw = 1
let g:loaded_netrwPlugin = 1
let g:loaded_netrwFileHandlers = 1
let g:loaded_netrwSettings = 1
let g:loaded_rrhelper = 1
let g:loaded_ruby_provider = 1
let g:loaded_shada_plugin = 1
let g:loaded_spellfile_plugin  = 1
let g:loaded_tar = 1
let g:loaded_tarPlugin = 1
let g:loaded_tutor_mode_plugin = 1
let g:loaded_2html_plugin = 1
let g:loaded_vimball = 1
let g:loaded_vimballPlugin = 1
let g:loaded_zip = 1
let g:loaded_zipPlugin = 1
" }}}
" Initializeing {{{
if has('vim_starting')
  " Global Mappings {{{
  " Use spacebar as leader and ; as secondary-leader
  " Required before loading plugins!
  let g:mapleader="\<Space>"
  let g:maplocalleader=';'

  nnoremap ^]       <Nop>
  nnoremap ^[       <Nop>

  " Release keymappings prefixes, evict entirely for use of plug-ins.
  nnoremap <Space>  <Nop>
  xnoremap <Space>  <Nop>
  nnoremap ,        <Nop>
  xnoremap ,        <Nop>
  nnoremap ;        <Nop>
  xnoremap ;        <Nop>
  " }}}

  if ! has('nvim') && has('pythonx')
    if has('python3')
      set pyxversion=3
    elseif has('python')
      set pyxversion=2
    endif
  endif

  " Ensure data directories
  call etc#util#ensure_directory([
    \   g:etc#cache_path . '/undo',
    \   g:etc#cache_path . '/backup',
    \   g:etc#cache_path . '/session',
    \   g:etc#cache_path . '/swap',
    \   g:etc#cache_path . '/view',
    \ ])
endif

" Load user scripts with confidential information
" or pre-settings like g:elite_mode
if filereadable(g:etc#vim_path.'/.vault.vim')
  call etc#util#source_file('.vault.vim')
endif

call etc#init()
call etc#util#source_file('vimrc.general')
call etc#util#source_file('vimrc.mappings')
call etc#util#source_file('vimrc.filetype')
call etc#util#source_file('vimrc.misc')
call etc#util#source_file('vimrc.theme')

" Load user custom local settings
if filereadable(g:etc#vim_path.'/local.vim')
  call etc#util#source_file('local.vim')
endif

" Trigger colorscheme events when vimrc is reloaded within vim
if ! has('vim_starting')
  doautocmd ColorScheme
endif

set secure
" }}}

" vim: set foldmethod=marker ts=2 sw=2 tw=80 expandtab :
